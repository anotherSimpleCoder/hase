/*
 * This file is generated by jOOQ.
 */
package de.hase.hasev2.database.tables.records;


import de.hase.hasev2.database.tables.Appointments;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AppointmentsRecord extends UpdatableRecordImpl<AppointmentsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>Appointments.appointmentId</code>.
     */
    public void setAppointmentid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Appointments.appointmentId</code>.
     */
    public Integer getAppointmentid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Appointments.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Appointments.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Appointments.creator</code>.
     */
    public void setCreator(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>Appointments.creator</code>.
     */
    public Integer getCreator() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>Appointments.date</code>.
     */
    public void setDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>Appointments.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>Appointments.location</code>.
     */
    public void setLocation(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>Appointments.location</code>.
     */
    public String getLocation() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppointmentsRecord
     */
    public AppointmentsRecord() {
        super(Appointments.APPOINTMENTS);
    }

    /**
     * Create a detached, initialised AppointmentsRecord
     */
    public AppointmentsRecord(Integer appointmentid, String name, Integer creator, LocalDateTime date, String location) {
        super(Appointments.APPOINTMENTS);

        setAppointmentid(appointmentid);
        setName(name);
        setCreator(creator);
        setDate(date);
        setLocation(location);
        resetChangedOnNotNull();
    }
}
