name: E2E Tests
on: push

jobs:
    test:
        name: Run end to end tests
        runs-on: ${{matrix.os}}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Set up RSA Keys
                run: |
                  mkdir backend/src/main/resources/certs
                  echo "${{ secrets.RSA_PRIVATE_KEY }}" >> backend/src/main/resources/certs/private.pem
                  echo "${{ secrets.RSA_PUBLIC_KEY }}" >> backend/src/main/resources/certs/public.pem
                  chmod 600 backend/src/main/resources/certs/private.pem
                  chmod 644 backend/src/main/resources/certs/public.pem

            -   name: Set up JDK and Maven cache
                uses: actions/setup-java@v4
                with:
                    java-version: '21'
                    distribution: 'temurin'
                    cache: 'maven'

            -   name: Build backend
                run: mvn -f backend/pom.xml clean install


            -   name: Find backend JAR file
                id: find-jar
                run: |
                    $jar = Get-ChildItem -Path backend/target -Filter 'hasev2-*.jar' | Select-Object -First 1
                    Write-Output "::set-output name=JAR_PATH::backend/target/$($jar.Name)"
                shell: pwsh

            -   name: Run backend
                shell: pwsh
                run: Start-Process -FilePath "java" -ArgumentList "-jar ${{ steps.find-jar.outputs.JAR_PATH }}" -NoNewWindow -PassThru

            -   name: Waiting for backend to be ready
                shell: pwsh
                run: |
                    Write-Output "Waiting for backend to start..."

                    $maxRetries = 12
                    $retryCount = 0
                    $backendReady = $false

                    while ($retryCount -lt $maxRetries -and -not $backendReady) {
                        try {
                            $response = Invoke-WebRequest -Uri http://127.0.0.1:8080/health -UseBasicParsing -ErrorAction Stop
                            if ($response.StatusCode -eq 200) {
                                $backendReady = $true
                            }
                        } catch {
                            Write-Output "Waiting for backend to start (retry $($retryCount + 1))"
                            Start-Sleep -Seconds 5
                            $retryCount++
                        }
                    }

                    if (-not $backendReady) {
                        Write-Error "Backend did not start within the expected time."
                        exit 1
                    }

            -   name: Set up Node.js
                uses: actions/setup-node@v2
                with:
                    node-version: '22'

            -   name: Install dependencies
                run: npm install -g yarn && yarn install --frozen lockfile
                working-directory: frontend
                

            -   name: Install playwright browser dependencies
                run: yarn playwright install --with-deps
                working-directory: frontend

            -   name: Build frontend
                run: npm run build
                working-directory: frontend

            -   name: Run e2e tests
                run: npm run test:e2e
                working-directory: frontend
                
            -   uses: actions/upload-artifact@v4
                if: ${{ !cancelled() }}
                with:
                    name: playwright-report
                    path: frontend/test-results
                    retention-days: 30
